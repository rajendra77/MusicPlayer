// { Driver Code Starts
//Initial Template for Java

/*package whatever //do not write package name here */

import java.io.*;
import java.util.*;
class GFG {
	public static void main (String[] args) {
		Scanner sc=new Scanner(System.in);
		
		int t=sc.nextInt();
		
		while(t-->0)
		{
		    int n=sc.nextInt();
		    
		    int arr[]=new int[n];
		    
		    for(int i=0;i<n;i++)
		    arr[i]=sc.nextInt();
		    
		    int k=sc.nextInt();
		    
		    System.out.println(kthSmallest(arr, 0, n-1, k));
		}
	}
	

    
 // } Driver Code Ends


//User function Template for Java

//selection sort
//time - O(n2)
/*
public static int kthSmallest(int[] arr, int l, int r, int k) 
{ 
   int n=arr.length;
   for(int i=0;i<n-1;i++){
       int minIndex=i;
       for(int j=i+1;j<n-1-i;i++){
           if(arr[minIndex]>arr[j]){
               minIndex=j;
           }
       }
       //swap
       int temp=arr[minIndex];
       arr[minIndex]=arr[i];
       arr[i]=temp;
   }
   return arr[k];
} */

//Merge sort 
/* Time O(nlog(n))
public static int kthSmallest(int[] arr, int l, int r, int k) 
{ 
   Arrays.sort(arr);
   return arr[k--];
} */

//brute force
//Time O(MaxDigit)
public static int kthSmallest(int[] arr, int l, int r, int k) 
{  
    int n=arr.length;
    int min=arr[0];
    int max=arr[0];
    int count=0;
    int kcount=1;
    int kmin=arr[0];
    for(int i=1;i<n;i++){
        if(min>arr[i]){
            min=arr[i];
        }
        if(max<arr[i]){
            max=arr[i];
        }
    }
    int[] temp=new int[max+1];
    for(int i=0;i<n;i++){
        temp[arr[i]]=1;
    }
    for(int i=0;i<=max;i++){
        if(temp[i]==1 && kcount==k){
             kmin=i;
             break;
        }else if(temp[i]==1){
             kcount++;
        }
    }
    return kmin;

}


// { Driver Code Starts.


}
  // } Driver Code Ends
